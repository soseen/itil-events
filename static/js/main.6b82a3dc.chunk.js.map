{"version":3,"sources":["components/SideNavData.jsx","components/Navbar.jsx","components/DataChart.jsx","Routes/Status.jsx","Routes/Alerts.jsx","Routes/Rules.jsx","components/Task.jsx","components/Team.jsx","Routes/Tasks.jsx","components/ServicesData.jsx","Routes/EventDetails.jsx","Routes/RuleDetails.jsx","Routes/NewEventForm.jsx","Routes/EditEventForm.jsx","Routes/EditRuleForm.jsx","Routes/NewTaskForm.jsx","Routes/NewRuleForm.jsx","Routes/TaskUpdateForm.jsx","components/EventsData.jsx","components/RulesData.jsx","components/TasksData.jsx","components/TeamsData.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["SideNavData","name","route","icon","Navbar","useState","sideNav","setSideNav","className","to","onClick","map","item","index","DataChart","tasksChartData","eventsData","type","defaults","global","maintainAspectRatio","chartData","setChartData","useEffect","eventFrequencies","reduce","stats","severity","console","log","data","labels","datasets","label","Warning","Minor","Major","Critical","backgroundColor","borderColor","borderWidth","options","cutoutPercentage","responsive","all","active","closed","scales","yAxes","ticks","beginAtZero","Status","services","itemCallback","tasksData","serviceEvents","setServiceEvents","history","useHistory","taskData","task","length","service","priority","status","events","id","push","handleRowClick","desc","startDate","Alerts","url","useRouteMatch","eventsDisplayed","setEventsDisplayed","filterList","e","target","value","filteredArray","newDisplayed","eventObject","onChange","displayed","resolved","JSON","parse","style","fontWeight","disabled","toString","toUpperCase","Rules","rulesData","rulesDisplayed","setRulesDisplayed","temp","i","date","Task","displayEvent","displayNewUpdateForm","taskDetails","setTaskDetails","eventToDisplay","find","eventID","expanded","team","updates","update","Team","filterByTeam","teamTasks","tasks","taskObject","tasksFreq","highlighted","Tasks","setTaskToDisplay","setEventToDisplay","teamsData","tasksDefault","teamsDefault","displayedTasks","setDisplayedTasks","teams","setTeams","filterTasks","attributeValue","filteredTasks","filtered","teamsHighlighted","newTeams","defaultTeam","tasksToDisplay","event","goBack","ServicesData","EventDetails","affectedServices","setAffectedServices","servicesArray","j","serviceID","serviceName","servicePriority","source","endDate","RuleDetails","ruleToDisplay","attribute","operator","NewEventForm","setEventsData","CURRENT_DATE","Date","toISOString","slice","NEW_ID","buttonActive","setButtonActive","serviceToAdd","setServiceToAdd","newEvent","setNewEvent","validated","setValidated","handleChange","triggerButton","s","parseInt","filteredServices","newServices","serviceItem","IDArray","removeService","undefined","concat","EditEventForm","servicesToDisplay","currentServices","fieldsToValidate","newEventsData","newData","validateAndSubmit","EditRuleForm","setRulesData","setRuleToDisplay","newRule","setNewRule","newRulesData","rule","NewTaskForm","newTask","setNewTask","t","NewRuleForm","TaskUpdateForm","taskToDisplay","newId","assignNewId","taskClosed","setTaskClosed","newUpdate","setNewUpdate","updatedEvent","EventsData","RulesData","TasksData","TeamsData","SEVERITIES_STATUSES","None","App","useMemo","newEvents","eventServiceId","highestSeverity","current","itemType","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6b82a3dc.chunk.js","sourcesContent":["import React from 'react';\r\nimport { AiFillHome, AiFillWarning, AiFillAlert, AiOutlineLogout } from \"react-icons/ai\";\r\nimport {BsFillPersonFill} from \"react-icons/bs\";\r\n\r\nexport const SideNavData = [\r\n    {\r\n        name: 'Status',\r\n        route: '/itil-events',\r\n        icon: <AiFillHome />\r\n    },\r\n    {\r\n        name: 'Alerts',\r\n        route: '/alerts',\r\n        icon: <AiFillAlert />\r\n    },\r\n    {\r\n        name: 'Rules',\r\n        route: '/rules',\r\n        icon: <AiFillWarning />\r\n    },\r\n    {\r\n        name: 'Tasks',\r\n        route: '/tasks',\r\n        icon: <BsFillPersonFill />\r\n    },\r\n    {\r\n        name: 'Log Out',\r\n        route: '/',\r\n        icon: <AiOutlineLogout />\r\n    }\r\n];\r\n","import React, { useState } from 'react'\r\nimport { FaBars } from \"react-icons/fa\";\r\nimport {Link} from 'react-router-dom';\r\nimport { SideNavData } from './SideNavData';\r\nimport './Navbar.scss';\r\n\r\nconst Navbar = () => {\r\n\r\n    const [sideNav, setSideNav] = useState(false);\r\n\r\n    return( \r\n        <>\r\n        <div className='navbar'>\r\n            <Link to='#' className='menu'>\r\n                <FaBars className='menu-bars' onClick={() =>setSideNav(!sideNav)}/>\r\n            </Link>\r\n            <p className='nav-title'>Event Management</p>\r\n        </div> \r\n        <nav className={sideNav ? 'side-menu active' : 'side-menu'}>\r\n            <ul className='side-menu-links'  onClick={() =>setSideNav(false)}>\r\n                {SideNavData.map((item, index) => {\r\n                    return (\r\n                        <li key={index} className='nav-item'>\r\n                            <Link to={item.route}>\r\n                                {item.icon}\r\n                                <span>{item.name}</span>\r\n                            </Link>\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n        </nav>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React, { useEffect, useState } from 'react'\r\nimport {Doughnut, Bar, defaults} from 'react-chartjs-2';\r\nimport './DataChart.css'\r\n\r\nconst DataChart = ({tasksChartData, eventsData, type}) => {\r\n\r\n    defaults.global.maintainAspectRatio = false;\r\n    const [chartData, setChartData] = useState({});\r\n    \r\n    useEffect(() => {\r\n\r\n        const eventFrequencies = eventsData.reduce(\r\n            (stats, { severity }) => ({\r\n                ...stats,\r\n                [severity]: stats[severity] + 1 || 1,\r\n            }),\r\n            {},\r\n        );\r\n\r\n        console.log(eventFrequencies);\r\n        setChartData(eventFrequencies);\r\n        \r\n    },[eventsData]);\r\n\r\n    return(\r\n        <div className='data-chart-container'>\r\n            {type === 'Doughnut' &&\r\n                <Doughnut \r\n                data={{\r\n                    labels: ['Warning', 'Minor', 'Major', 'Critical'],\r\n                    datasets: [{\r\n                        label: 'Number of events',\r\n                        data: [chartData.Warning, chartData.Minor, chartData.Major, chartData.Critical],\r\n                        backgroundColor: [\r\n                            '#2a49b1',\r\n                            '#ddcb2c',\r\n                            '#e4880f',\r\n                            '#6d121e'\r\n                        ],\r\n                        borderColor: '#1f1f1f00',\r\n                        borderWidth: 10\r\n                    }],\r\n                }}\r\n                options={{\r\n                    cutoutPercentage: 40,\r\n                    maintainAspectRatio: false,\r\n                    responsive: true,\r\n                }}\r\n                />\r\n            }\r\n\r\n            {type === 'Line' &&\r\n                <Bar \r\n                data={{\r\n                    labels: ['All', 'Active', 'Closed'],\r\n                    datasets: [{\r\n                        label: 'Tasks',\r\n                        data: [tasksChartData.all, tasksChartData.active, tasksChartData.closed],\r\n                        backgroundColor: [\r\n                            '#a89378',\r\n                            '#610a0a',\r\n                            '#1a7516',\r\n                        ],\r\n                        borderColor: '#1f1f1f00',\r\n                        borderWidth: 5\r\n                    }],\r\n                }}\r\n                options= {{\r\n                        maintainAspectRatio: false,\r\n                        responsive: true,\r\n                    scales: {\r\n                        yAxes: [{\r\n                            ticks: {\r\n                                beginAtZero: true\r\n                            }\r\n                        }]\r\n                    }\r\n                }}\r\n                />\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DataChart","import React, { useState } from 'react';\r\nimport './Status.scss'\r\nimport {useHistory} from 'react-router-dom';\r\nimport DataChart from '../components/DataChart';\r\n\r\nconst Status = ({services, itemCallback, eventsData, tasksData}) => {\r\n\r\n    console.log(services);\r\n    console.log(eventsData);\r\n\r\n    const [serviceEvents, setServiceEvents] = useState([]);\r\n    let history = useHistory();\r\n\r\n    let tasksChartData = tasksData.reduce((taskData, task) => {\r\n        if(!task.closed){\r\n            taskData['active']++;\r\n        } else if(task.closed) {\r\n            taskData['closed']++;\r\n        }\r\n        return taskData;\r\n    }, {active: 0, closed: 0, all: tasksData.length});\r\n    \r\n\r\n\r\n    const displayRelatedEvents = (events) => {\r\n        setServiceEvents(events)\r\n    }\r\n\r\n    const handleRowClick = (item) => {\r\n        itemCallback('event', item);\r\n        history.push(`alerts/${item.id}`);\r\n    }\r\n\r\n    return(\r\n        <div className='status-page-container'>\r\n            {/* <h1 className='page-title'>Status</h1> */}\r\n        \r\n            <div className='status-content-container'>\r\n                <div className='status-header-container'>\r\n                    <div className='status-header'>\r\n                        <p>Status</p>\r\n                    </div>\r\n                </div>\r\n                <div className='status-content'>\r\n                    <div className='dashboard-container'>\r\n                        <div className='dashboard'>\r\n                            <div className='services-container'>\r\n                                {services.map((service, index) => {\r\n                                    return(\r\n                                        <div key ={service.id} className={`service-box service-box-priority-${service.priority} service-box-status-${service.status}`} onClick={() => displayRelatedEvents(service.events)}>\r\n                                            <p>{service.name}</p>\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                            <div className='service-events-container'>\r\n                                <table className='content-table'>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>ID</th>\r\n                                            <th>Name</th>\r\n                                            <th>Severity</th>\r\n                                            <th>Date</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {serviceEvents.map((item, index) => {\r\n                                            return (\r\n                                                <tr key={item.id} className='event-row' onClick={() => handleRowClick(item)}>\r\n                                                    <td>{item.id}</td>\r\n                                                    <td>{item.desc}</td>\r\n                                                    {item.severity === 'Warning' && \r\n                                                        <td><span className='severity-warning'>{item.severity}</span></td>\r\n                                                    }\r\n                                                    {item.severity === 'Minor' && \r\n                                                        <td><span className='severity-minor'>{item.severity}</span></td>\r\n                                                    }\r\n                                                    {item.severity === 'Major' && \r\n                                                        <td><span className='severity-major'>{item.severity}</span></td>\r\n                                                    }\r\n                                                    {item.severity === 'Critical' && \r\n                                                        <td><span className='severity-critical'>{item.severity}</span></td>\r\n                                                    }\r\n                                                    <td>{item.startDate}</td>\r\n                                                </tr>\r\n                                            )\r\n                                        })}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='stats-container'>\r\n                        <div className='doughnut-chart-container'>\r\n                            <DataChart tasksChartData={tasksChartData} eventsData={eventsData} type='Doughnut' />\r\n                        </div>\r\n                        <div className='line-chart-container'>\r\n                            <DataChart tasksChartData={tasksChartData} eventsData={eventsData} type='Line' />\r\n                        </div>           \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Status;","import React, { useState } from 'react';\r\nimport './Alerts.scss'\r\nimport { useHistory, useRouteMatch, Link} from 'react-router-dom';\r\n\r\nconst Alerts = ({eventsData, itemCallback}) => {\r\n\r\n    let history = useHistory();\r\n    let { url } = useRouteMatch();\r\n\r\n\r\n    const [eventsDisplayed, setEventsDisplayed] = useState(eventsData);\r\n\r\n    const filterList = (e) => {\r\n        if(e.target.value === 'All'){\r\n            setEventsDisplayed(eventsData);\r\n        } else {\r\n            let filteredArray = eventsData.reduce((newDisplayed, eventObject) =>\r\n            eventObject.severity === e.target.value ? [...newDisplayed, eventObject] : newDisplayed, \r\n            []);\r\n            setEventsDisplayed(filteredArray);\r\n        }\r\n    }\r\n\r\n    const handleRowClick = (item) => {\r\n        itemCallback('event', item);\r\n        history.push(`${url}/${item.id}`);\r\n    }\r\n\r\n    const filterResolved = (e) => {\r\n        if(e.target.value === 'All'){\r\n            setEventsDisplayed(eventsData);\r\n        } else {\r\n        let filteredArray = eventsData.reduce((displayed, eventObject) =>\r\n            eventObject.resolved === JSON.parse(e.target.value) ? [...displayed, eventObject] : displayed, \r\n            []);\r\n        setEventsDisplayed(filteredArray);\r\n        }\r\n    }\r\n\r\n\r\n    return(\r\n        <div className='alerts-page-container'>\r\n            <div className='page-content'>\r\n                <div className='events-table-container'>\r\n                    \r\n                    <div className='events-table-nav'>\r\n                        <p>Alerts</p>\r\n                        <div className='filters-container'>\r\n                            <select name='select-resolved' className='select-filter' onChange={filterResolved}>\r\n                                <option style={{fontWeight: \"bold\"}} value=\"Priority\" disabled>Resolved</option>\r\n                                <option style={{fontWeight: \"bold\"}} value='All'>All</option>\r\n                                <option style={{fontWeight: \"bold\"}} value={false}>False</option>\r\n                                <option style={{fontWeight: \"bold\"}} value={true}>True</option>  \r\n                            </select>\r\n                            <div className='buttons-container'>\r\n                                <button name='button-filter' className='button-filter' onClick={filterList} value={'All'}>All</button>\r\n                                <button name='button-filter' className='button-filter' onClick={filterList} value={'Warning'}>Warning</button>\r\n                                <button name='button-filter' className='button-filter' onClick={filterList} value={'Minor'}>Minor</button>\r\n                                <button name='button-filter' className='button-filter' onClick={filterList} value={'Major'}>Major</button>\r\n                                <button name='button-filter' className='button-filter' onClick={filterList} value={'Critical'}>Critical</button>\r\n                            </div>\r\n                        </div>       \r\n                    </div>\r\n                    <Link to={`/alerts/new-event`}>\r\n                    <button className='new-event-button'>New Event</button>\r\n                    </Link>\r\n                    <table className='content-table'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Name</th>\r\n                                <th>Severity</th>\r\n                                <th>Date</th>\r\n                                <th>Resolved</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {eventsDisplayed.map((item) => {\r\n                                return (\r\n                                    <tr key={item.id} className='event-row' onClick={() => handleRowClick(item)}>\r\n                                        <td>{item.id}</td>\r\n                                        <td>{item.desc}</td>\r\n                                        {item.severity === 'Warning' && \r\n                                            <td><span className='severity-warning'>{item.severity}</span></td>\r\n                                        }\r\n                                        {item.severity === 'Minor' && \r\n                                            <td><span className='severity-minor'>{item.severity}</span></td>\r\n                                        }\r\n                                        {item.severity === 'Major' && \r\n                                            <td><span className='severity-major'>{item.severity}</span></td>\r\n                                        }\r\n                                        {item.severity === 'Critical' && \r\n                                            <td><span className='severity-critical'>{item.severity}</span></td>\r\n                                        }\r\n                                        <td>{item.startDate}</td>\r\n                                        <td>{item.resolved.toString().toUpperCase()}</td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alerts;","import {React, useState} from 'react';\r\nimport { useHistory, useRouteMatch } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport './Rules.scss';\r\n\r\nconst Rules = ({rulesData, itemCallback}) => {\r\n\r\n    let history = useHistory();\r\n    let { url } = useRouteMatch();\r\n\r\n    const [rulesDisplayed, setRulesDisplayed] = useState(rulesData);\r\n\r\n    const filterList = (e) => {\r\n\r\n        if(e.target.name === 'select-priority') {\r\n            if(e.target.value === 'All'){\r\n                setRulesDisplayed(rulesData);\r\n            } else {\r\n                let temp = [];\r\n                for(let i=0; i < rulesData.length; i++){\r\n                    if(rulesData[i].priority.toString() === e.target.value.toString()){\r\n                        temp.push(rulesData[i]);\r\n                    }\r\n                }\r\n                console.log(temp);\r\n                setRulesDisplayed(temp);\r\n            }    \r\n        }\r\n        else if(e.target.name === 'button-filter'){\r\n            if(e.target.value === 'All'){\r\n                setRulesDisplayed(rulesData);\r\n            } else {\r\n                let temp = [];\r\n                for(let i=0; i < rulesData.length; i++){\r\n                    if(rulesData[i].severity === e.target.value){\r\n                        temp.push(rulesData[i]);\r\n                    }\r\n                }\r\n                setRulesDisplayed(temp);\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleRowClick = (item) => {\r\n        itemCallback('rule', item);\r\n        console.log(item.severity);\r\n        history.push(`${url}/${item.id}`);\r\n    }\r\n\r\n    return(\r\n        <div className='page-container'>\r\n            <div className='rules-table-container'>\r\n                    <div className='rules-table-nav'>\r\n                        <p>Rules</p>\r\n                        <div className='filters-container'>\r\n                            <select name='select-priority' className='select-filter' onChange={filterList}>\r\n                                <option style={{fontWeight: \"bold\"}} value=\"Priority\" disabled>Priority</option>\r\n                                <option style={{fontWeight: \"bold\"}} value='All'>All</option>\r\n                                <option style={{fontWeight: \"bold\"}} value={1}>1</option>\r\n                                <option style={{fontWeight: \"bold\"}} value={2}>2</option>\r\n                                <option style={{fontWeight: \"bold\"}} value={3}>3</option>\r\n                                <option style={{fontWeight: \"bold\"}} value={4}>4</option>\r\n                                <option style={{fontWeight: \"bold\"}} value={5}>5</option>\r\n                            </select>\r\n                            <div className='buttons-container'>\r\n                                <button name='button-filter' className='button-filter' onClick={filterList} value={'All'}>All</button>\r\n                                <button name='button-filter' className='button-filter' onClick={filterList} value={'Warning'}>Warning</button>\r\n                                <button name='button-filter' className='button-filter' onClick={filterList} value={'Minor'}>Minor</button>\r\n                                <button name='button-filter' className='button-filter' onClick={filterList} value={'Major'}>Major</button>\r\n                                <button name='button-filter' className='button-filter' onClick={filterList} value={'Critical'}>Critical</button>\r\n                            </div>\r\n                        </div>                    \r\n                    </div>\r\n                    <Link to={`/rules/new-rule`}>\r\n                    <button className='new-rule-button'>New Rule</button>\r\n                    </Link>\r\n                    <table className='content-table'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Name</th>\r\n                                <th>Severity</th>\r\n                                <th>Priority</th>\r\n                                <th>Creation Date</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {rulesDisplayed.map((item) => {\r\n                                return (\r\n                                    <tr key={item.id} className='rules-row' onClick={() => {handleRowClick(item)}}>\r\n                                        <td>{item.id}</td>\r\n                                        <td>{item.name}</td>\r\n                                        {item.severity === 'Warning' && \r\n                                            <td><span className='severity-box severity-warning'>{item.severity}</span></td>\r\n                                        }\r\n                                        {item.severity === 'Minor' && \r\n                                            <td><span className='severity-box severity-minor'>{item.severity}</span></td>\r\n                                        }\r\n                                        {item.severity === 'Major' && \r\n                                            <td><span className='severity-box severity-major'>{item.severity}</span></td>\r\n                                        }\r\n                                        {item.severity === 'Critical' && \r\n                                            <td><span className='severity-box severity-critical'>{item.severity}</span></td>\r\n                                        }\r\n                                        {item.priority === 1 && \r\n                                            <td className='priority-container'>\r\n                                                <div className='priority-box'></div>\r\n                                            </td>\r\n                                        }\r\n                                         {item.priority === 2 && \r\n                                            <td className='priority-container'>\r\n                                                <div className='priority-box'></div>\r\n                                                <div className='priority-box'></div>\r\n                                            </td>\r\n                                        }\r\n                                         {item.priority === 3 && \r\n                                            <td className='priority-container'>\r\n                                                <div className='priority-box'></div>\r\n                                                <div className='priority-box'></div>\r\n                                                <div className='priority-box'></div>\r\n                                            </td>\r\n                                        }\r\n                                         {item.priority === 4 && \r\n                                            <td className='priority-container'>\r\n                                                <div className='priority-box'></div>\r\n                                                <div className='priority-box'></div>\r\n                                                <div className='priority-box'></div>\r\n                                                <div className='priority-box'></div>\r\n                                            </td>\r\n                                        }\r\n                                         {item.priority === 5 && \r\n                                            <td className='priority-container'>\r\n                                                <div className='priority-box'></div>\r\n                                                <div className='priority-box'></div>\r\n                                                <div className='priority-box'></div>\r\n                                                <div className='priority-box'></div>\r\n                                                <div className='priority-box'></div>\r\n                                            </td>\r\n                                        }\r\n                                        <td>{item.date}</td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rules;\r\n","import React, { useState } from 'react';\r\nimport { MdKeyboardArrowDown, MdKeyboardArrowUp} from 'react-icons/md';\r\nimport './Task.scss'\r\nimport { AiFillPlusCircle, AiOutlinePlus } from 'react-icons/ai';\r\n\r\nconst Task = ({task, displayEvent, displayNewUpdateForm, eventsData}) => {\r\n\r\n\r\n    \r\n    const [taskDetails, setTaskDetails] = useState(task);\r\n    const eventToDisplay = eventsData.find(e => e.id === task.eventID);\r\n\r\n    const displayTaskDetails = () => {\r\n        setTaskDetails({\r\n            ...taskDetails, \r\n                expanded: !taskDetails.expanded\r\n        })\r\n    }\r\n\r\n    return(\r\n    <div className={taskDetails.expanded? 'task-container task-container-expanded' : 'task-container'} onClick={displayTaskDetails}>\r\n        <div key={taskDetails.id} className='task-header-container'>\r\n            <div className={taskDetails.closed ? 'task-status-box task-closed' : 'task-status-box task-active' }>{taskDetails.id}</div>\r\n            <div className='task-details'>\r\n                <p className='task-details-name'>{taskDetails.name}</p>\r\n                <p className='task-details-date'>{taskDetails.startDate}</p>\r\n            </div>\r\n            <div className='task-arrow-container'>\r\n                {taskDetails.expanded === true ?\r\n                    <MdKeyboardArrowUp /> : <MdKeyboardArrowDown />\r\n                }\r\n                \r\n            </div>\r\n        </div>\r\n        {taskDetails.expanded === true &&\r\n            <div className='task-expanded-container'>\r\n                <div className='task-expanded-details'>\r\n                    <div className='task-expanded-details-header'>\r\n                        <p>Task Details</p>\r\n                    </div>\r\n                    <div className='task-expanded-details-info'>\r\n                        <div>\r\n                        <label>View Event</label>\r\n                        <button onClick={() => displayEvent(eventToDisplay)}>Display</button>\r\n                        </div>\r\n                        <div>\r\n                        <label>Team</label>\r\n                        <p>{taskDetails.team.name}</p>\r\n                        </div>\r\n                        <div>\r\n                        <label>Last Update</label>\r\n                        <p>{taskDetails.updates? taskDetails.updates[taskDetails.updates.length - 1].date : '-'}</p>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n                {taskDetails?.updates && taskDetails.updates.map((update, index) => {\r\n                    return(\r\n                    <div key={index} className='task-update-container'>\r\n                        <div className='task-update-header'>\r\n                            <div className='update-desc'>\r\n                                {update.desc}\r\n                            </div>\r\n                            <div className='task-update-status'>\r\n                                <label>Status: <span className={`span-status-${update.status}`}>{update.status}</span></label>\r\n                                {update.status === 400 &&\r\n                                <p>Active</p>\r\n                                }\r\n                                {update.status === 200 &&\r\n                                <p>Resolved</p>\r\n                                }\r\n                                {update.status === 100 &&\r\n                                <p>Applying changes</p>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <div className='task-update-details-container'>\r\n                            <div className='task-update-details'>\r\n                                <label>ID</label>\r\n                                <p>{update.id}</p>\r\n                            </div>\r\n                            <div className='task-update-details'>\r\n                                <label>Date</label>\r\n                                <p>{update.date}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    )\r\n                    })\r\n                }\r\n                <div className={taskDetails.closed ? 'task-expanded-new-update new-update-hidden' : 'task-expanded-new-update'}>\r\n                    <p>New Update</p>\r\n                    <button className='new-update-button' onClick={() => displayNewUpdateForm(task)}>\r\n                     {/* <AiFillPlusCircle /> */}\r\n                     <AiOutlinePlus />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        }\r\n    </div>\r\n    \r\n    )\r\n}\r\n\r\nexport default Task;","import React from 'react';\r\nimport './Team.scss';\r\n\r\nconst Team = ({team, tasksData, filterByTeam}) => {\r\n\r\n    let teamTasks = tasksData.reduce((tasks, taskObject) => \r\n        taskObject.team.id === team.id ? [...tasks, taskObject] : tasks\r\n    ,[]);\r\n\r\n    let tasksFreq = teamTasks.reduce((tasks, taskObject) => {\r\n        if(taskObject.closed){\r\n            tasks['closed']++\r\n        } else {\r\n            tasks['active']++\r\n        } \r\n        return tasks;\r\n    }, {all: teamTasks.length, active: 0, closed: 0});\r\n\r\n\r\n    return(\r\n        <div className={team.highlighted ? 'team-container team-container-highlighted' : 'team-container' } onClick={() => filterByTeam(team)}>\r\n            <div className='team-header-container'>\r\n                <div className='team-id-box'>{team.id}</div>\r\n                <div className='team-details-header'>\r\n                    <p className='team-name'>{team.name}</p>\r\n                    <p className='team-active-tasks'>Active tasks: <span className={tasksFreq.active > 0 ? 'team-active-tasks-highlighted' : ''}>{tasksFreq.active}</span></p>\r\n                </div>\r\n            </div>\r\n            {/* <div className={expanded ? 'team-details' : 'team-details team-details-hidden'}>\r\n                    <div className='team-details-chart'>\r\n                        <Bar \r\n                            data={{\r\n                                labels: ['All', 'Active', 'Closed'],\r\n                                datasets: [{\r\n                                    label: 'Tasks',\r\n                                    data: [tasksFreq.all, tasksFreq.active, tasksFreq.closed],\r\n                                    backgroundColor: [\r\n                                    '#a89378',\r\n                                    '#610a0a',\r\n                                    '#1a7516',\r\n                                    ],\r\n                                    borderColor: '#1f1f1f00',\r\n                                    borderWidth: 5\r\n                                }],\r\n                            }}\r\n                            options= {{\r\n                                maintainAspectRatio: false,\r\n                                responsive: true,\r\n                                scales: {\r\n                                    yAxes: [{\r\n                                    ticks: {\r\n                                        beginAtZero: true,\r\n                                        stepSize: 1\r\n                                        }\r\n                                    }]\r\n                                }\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </div> */}\r\n        </div>\r\n    )\r\n}   \r\n\r\nexport default Team;","import React, { useState } from 'react';\r\nimport './Tasks.scss'\r\nimport {useHistory} from 'react-router-dom';\r\nimport Task from '../components/Task'\r\nimport Team from '../components/Team';\r\n\r\n\r\nconst Tasks = ({tasksData, setTaskToDisplay, setEventToDisplay, teamsData, eventsData}) => {\r\n\r\n\r\n    let history = useHistory();\r\n\r\n    const tasksDefault = tasksData.map((task => ({...task, expanded: false})));\r\n    const teamsDefault = teamsData.map((team => ({...team, highlighted: false})));\r\n\r\n    const [displayedTasks, setDisplayedTasks] = useState(tasksDefault);\r\n    const [teams, setTeams] = useState(teamsDefault);\r\n\r\n    const filterTasks = (attributeValue) => {\r\n        \r\n        let filteredTasks = tasksDefault.reduce((filtered, taskObject) => \r\n            taskObject.closed === attributeValue ? [...filtered, taskObject] : filtered,\r\n            []);\r\n\r\n        setTeams(teamsDefault);\r\n        setDisplayedTasks(filteredTasks);\r\n    }\r\n\r\n    const filterByTeam = (team) => {\r\n\r\n        let teamsHighlighted = teamsDefault.reduce((newTeams, defaultTeam) =>\r\n        defaultTeam.id === team.id ? [...newTeams, { ...defaultTeam, highlighted: !defaultTeam.highlighted }] : [...newTeams, defaultTeam],\r\n        []);\r\n        \r\n        setTeams(teamsHighlighted);\r\n\r\n        let tasksToDisplay = tasksDefault.reduce((filtered, taskObject) => \r\n        taskObject.team.id === team.id ? [...filtered, taskObject] : filtered,\r\n        []);\r\n\r\n        setDisplayedTasks(tasksToDisplay);\r\n    }\r\n\r\n    const displayEvent = (event) => {\r\n        setEventToDisplay(event);\r\n        history.push(`alerts/${event.id}`);\r\n    }\r\n\r\n    const displayNewUpdateForm = (task) => {\r\n        setTaskToDisplay(task);\r\n        history.push(`tasks/${task.id}/new-update`);\r\n    }\r\n\r\n    const displayAllTasks = () => {\r\n        setTeams(teamsDefault);\r\n        setDisplayedTasks(tasksDefault)\r\n    }\r\n    \r\n    return(\r\n        <div className='tasks-page-container'>\r\n            <div className='tasks-container'>\r\n                <div className='tasks-header-container'>\r\n                    <p className='tasks-header'>Tasks</p>\r\n                    <button onClick={() => history.goBack()}>Back</button>\r\n                </div>\r\n                <div className='tasks-content-container'>\r\n                    <div className='tasks-content'>\r\n                        <div className='tasks-content-panel'>\r\n                            <p>Available Tasks</p>\r\n                            <div className='tasks-content-panel-filters'>\r\n                                <button onClick={() => displayAllTasks()}>All</button>\r\n                                <button onClick={() => filterTasks(false)}>Active</button>\r\n                                <button onClick={() => filterTasks(true)}>Closed</button>\r\n                            </div>\r\n                        </div>\r\n                        {displayedTasks.map((task, index) => {\r\n                            return(\r\n                                <Task key={task.id} task={task} displayEvent={displayEvent} displayNewUpdateForm={displayNewUpdateForm} eventsData={eventsData}/>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                    <div className='tasks-content'>\r\n                        <div className='tasks-content-panel'>\r\n                            <p>Teams</p>\r\n                        </div>\r\n                        {teams.map((team, index) => {\r\n                            return(\r\n                                <Team key={team.id} team={team} tasksData={tasksData} filterByTeam={filterByTeam}></Team>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default Tasks;","\r\nexport const ServicesData = [\r\n    {\r\n        id: 1,\r\n        name: 'Order Fullfilment',\r\n        priority: 4\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'Trade',\r\n        priority: 5\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'Tibco',\r\n        priority: 3\r\n    },\r\n    {\r\n        id: 4,\r\n        name: 'Tomcat',\r\n        priority: 3\r\n    },\r\n    {\r\n        id: 5,\r\n        name: 'Alteon',\r\n        priority: 2\r\n    },\r\n    {\r\n        id: 6,\r\n        name: 'User Verification',\r\n        priority: 2\r\n    },\r\n    {\r\n        id: 7,\r\n        name: 'Customer History',\r\n        priority: 1\r\n    },\r\n    {\r\n        id: 8,\r\n        name: 'Consumer Analytics',\r\n        priority: 4\r\n    },\r\n    {\r\n        id: 9,\r\n        name: 'Production Audit',\r\n        priority: 5\r\n    },\r\n]","import React, { useEffect, useState } from 'react';\r\nimport './EventDetails.scss';\r\nimport {ServicesData} from '../components/ServicesData.jsx';\r\nimport {Link, useHistory} from 'react-router-dom';\r\n\r\nconst EventDetails = ({eventToDisplay}) => {\r\n\r\n    let history = useHistory();\r\n    const [affectedServices, setAffectedServices] = useState([]);\r\n\r\n    useEffect(() => {\r\n\r\n        let servicesArray = []\r\n        if(eventToDisplay.service !== null){\r\n            for(let i=0; i<eventToDisplay.service.length; i++){\r\n                for(let j=0; j<ServicesData.length; j++){\r\n                    if (eventToDisplay.service[i] === ServicesData[j].id){\r\n                        servicesArray.push({\r\n                            serviceID: ServicesData[j].id,\r\n                            serviceName: ServicesData[j].name,\r\n                            servicePriority: ServicesData[j].priority\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        setAffectedServices(servicesArray);\r\n    },[eventToDisplay.service]);\r\n\r\n    return(\r\n        <div className='page-container'>\r\n            <div className='event-details-container'>\r\n                <div className='event-details-buttons'>\r\n                        <button onClick={() => history.goBack()}>Back</button>\r\n                    <Link to={`/alerts/${eventToDisplay.id}/edit-event`}>\r\n                        <button>Edit</button>\r\n                    </Link>\r\n                    <Link to={`/alerts/${eventToDisplay.id}/new-task`}>\r\n                        <button>Apply Task</button>\r\n                    </Link>\r\n                </div>\r\n                <div className='event-details-info-container'>\r\n                    {eventToDisplay.severity === \"Warning\" &&\r\n                    <div className='event-details-severity event-details-warning'>\r\n                        <p>{eventToDisplay.severity}</p>\r\n                    </div>\r\n                    }\r\n                    {eventToDisplay.severity === \"Minor\" &&\r\n                    <div className='event-details-severity event-details-minor'>\r\n                        <p>{eventToDisplay.severity}</p>\r\n                    </div>\r\n                    }\r\n                    {eventToDisplay.severity === \"Major\" &&\r\n                    <div className='event-details-severity event-details-major'>\r\n                        <p>{eventToDisplay.severity}</p>\r\n                    </div>\r\n                    }\r\n                    {eventToDisplay.severity === \"Critical\" &&\r\n                    <div className='event-details-severity event-details-critical'>\r\n                        <p>{eventToDisplay.severity}</p>\r\n                    </div>\r\n                    }\r\n                    <div className='event-details-info-box'>\r\n                        <div className='event-details-info-left'>\r\n                            <label className='event-details-label'>ID</label>\r\n                            <p>{eventToDisplay.id}</p>\r\n                            <label className='event-details-label'>Description</label>\r\n                            <p>{eventToDisplay.desc}</p>\r\n                            <label className='event-details-label'>Source</label>\r\n                            <p>{eventToDisplay.source}</p>\r\n                            <label className='event-details-label'>Start Date</label>\r\n                            <p>{eventToDisplay.startDate}</p>\r\n                            <label className='event-details-label'>End Date</label>\r\n                            <p>{eventToDisplay.endDate}</p>\r\n                            <label className='event-details-label'>Resolved</label>\r\n                            <p>{eventToDisplay.resolved.toString()}</p>\r\n                        </div>\r\n                        <div className='event-details-info-right'>\r\n                            <label className='event-details-label'>Affected Services</label>\r\n                            <div className='event-details-services'>\r\n                                {affectedServices.map((item,index) => {\r\n                                    return (\r\n                                        <p key={item.serviceID}>{item.serviceName}</p>\r\n                                    )\r\n                                })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EventDetails;","import React from 'react';\r\nimport './RuleDetails.scss'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst RuleDetails = ({ruleToDisplay}) => {\r\n    \r\n\r\n    console.log(ruleToDisplay);\r\n    \r\n    return(\r\n        <div className='page-container'>\r\n            <div className='rule-details-container'>\r\n                <div className='rule-buttons'>\r\n                    <Link to='/rules'>\r\n                        <button>Back</button>\r\n                    </Link>\r\n                    <Link to={`/rules/${ruleToDisplay.id}/edit-rule`}>\r\n                        <button>Edit</button>\r\n                    </Link>\r\n                </div>\r\n                <div className='rule-header'>\r\n                    <p className='rule-header-title'>Rule Details</p>\r\n                    {/* <p className='rule-header-severity'>Severity:</p> */}\r\n                    {ruleToDisplay.severity ==='Warning' && \r\n                        <div className='rule-severity-box rule-warning'>Warning</div>\r\n                    }\r\n                    {ruleToDisplay.severity ==='Minor' && \r\n                        <div className='rule-severity-box rule-minor'>Minor</div>\r\n                    }\r\n                    {ruleToDisplay.severity ==='Major' && \r\n                        <div className='rule-severity-box rule-major'>Major</div>\r\n                    }\r\n                    {ruleToDisplay.severity ==='Critical' && \r\n                        <div className='rule-severity-box rule-critical'>Critical</div>\r\n                    }\r\n                </div>\r\n                <div className='rule-details-info-container'>\r\n                    <div className='rule-details-info rule-left'>\r\n                        <label className='rule-details-section'>General Info</label>\r\n                        <label className='rule-details-label'>ID</label>\r\n                        <p>{ruleToDisplay.id}</p>\r\n                        <label className='rule-details-label'>Name</label>\r\n                        <p>{ruleToDisplay.name}</p>\r\n                        <label className='rule-details-label'>Priority</label>\r\n                        <p>{ruleToDisplay.priority}</p>\r\n                        <label className='rule-details-label'>Date</label>\r\n                        <p>{ruleToDisplay.date}</p>\r\n                    </div>\r\n                    <div className='rule-details-info rule-right'>\r\n                        <label className='rule-details-section'>Rule Threshold</label>\r\n                        <label className='rule-details-label'>Attribute</label>\r\n                        <p>{ruleToDisplay.attribute}</p>\r\n                        <label className='rule-details-label'>Operator</label>\r\n                        <p>{ruleToDisplay.operator}</p>\r\n                        <label className='rule-details-label'>Value</label>\r\n                        <p>{ruleToDisplay.value}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default RuleDetails","import {React, useState} from 'react';\r\nimport './EventForm.scss';\r\nimport {AiOutlineClose} from 'react-icons/ai';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nconst NewEventForm = ({eventsData, services, setEventsData}) => {\r\n\r\n    const assignNewId = () => {\r\n        if(eventsData && eventsData.length > 0) {\r\n            return eventsData[eventsData.length -1].id + 1;\r\n        } else {\r\n            return 1;\r\n        }\r\n    }\r\n\r\n    const CURRENT_DATE = new Date().toISOString().slice(0, 10);\r\n    const NEW_ID = assignNewId();\r\n\r\n    let history = useHistory();\r\n\r\n    console.log(CURRENT_DATE.toString());\r\n\r\n    const [buttonActive, setButtonActive] = useState(null);\r\n    const [serviceToAdd, setServiceToAdd] = useState(services[0]);\r\n    const [affectedServices, setAffectedServices] = useState([]);\r\n    const [newEvent, setNewEvent] = useState({\r\n        id: NEW_ID,\r\n        severity: '',\r\n        source: '',\r\n        service: null,\r\n        desc: '',\r\n        startDate: CURRENT_DATE,\r\n        endDate: '',\r\n        resolved: false\r\n    });\r\n    const [validated, setValidated] = useState(true);\r\n\r\n    const handleChange = (e) => {\r\n\r\n        if(e.target.name !== 'endDate'){\r\n            setNewEvent({\r\n                ...newEvent, \r\n                [e.target.name]: e.target.value\r\n            });\r\n        } else {\r\n            setNewEvent({\r\n                ...newEvent, \r\n                [e.target.name]: e.target.value,\r\n                resolved: true\r\n            });\r\n        }\r\n    }\r\n\r\n    const triggerButton = (e) => {\r\n        setButtonActive(e.target.value);\r\n        setNewEvent({\r\n            ...newEvent, \r\n            severity: e.target.value\r\n        });\r\n    }\r\n\r\n    const selectService = (e) => {\r\n       let service = services.find(s => s.id === parseInt(e.target.value)); \r\n       setServiceToAdd(service);\r\n    }\r\n\r\n    const addService = () => {\r\n\r\n        \r\n        if(!affectedServices?.find(service => service.id === serviceToAdd.id)){\r\n            setAffectedServices([...affectedServices, serviceToAdd]);\r\n            setNewEvent({\r\n                ...newEvent, \r\n                service: newEvent.service? [...newEvent.service, serviceToAdd.id] : [serviceToAdd.id]\r\n            });\r\n        }\r\n    }\r\n\r\n    const removeService = (service) => {\r\n\r\n        let filteredServices = affectedServices.reduce((newServices, serviceItem) => \r\n           serviceItem.id !== service.id ? [...newServices, serviceItem] : newServices, \r\n           [])\r\n        \r\n        setAffectedServices(filteredServices);\r\n        setNewEvent({\r\n            ...newEvent, \r\n            service: filteredServices.reduce((IDArray, serviceItem) =>\r\n                    [...IDArray, serviceItem.id], [])\r\n        });\r\n    }\r\n\r\n    const setResolvedFalse = () => {\r\n\r\n            setNewEvent({\r\n                ...newEvent,\r\n                resolved: false, \r\n                endDate: ''\r\n            });\r\n    }\r\n\r\n    const validateAndSubmit = (fieldsToValidate) => {\r\n        if(fieldsToValidate.find(s => s === '') === undefined){\r\n            setValidated(true);\r\n            setEventsData(eventsData.concat(newEvent));\r\n            history.goBack();\r\n         } else {\r\n            setValidated(false);\r\n         }\r\n    }\r\n\r\n    return(\r\n        <div className='page-container'>\r\n            <div className='event-form-container'>\r\n                <div className='event-form-header'>\r\n                    <p>New Event</p>\r\n                    <button onClick={() => history.goBack()}>Back</button>\r\n                </div>\r\n                <div className='event-inputs-container'>\r\n                    <div className='event-inputs-validation'>\r\n                        <p className={validated ? 'validation-message-hidden' : ''}>Please fill in all the required fields</p>\r\n                    </div>\r\n                    <div className='event-inputs'>\r\n                        <div className='event-inputs-row'>\r\n                            <label className='event-inputs-label input-required'>ID</label>\r\n                            <input disabled type='text' name='id' value={NEW_ID} className='event-inputs-input'></input>\r\n                        </div>\r\n                        <div className='event-inputs-row'>\r\n                            <label className='event-inputs-label input-required'>Name</label>\r\n                            <input type='text' name='desc' value={newEvent.desc} className='event-inputs-input' onChange={handleChange}></input>\r\n                        </div>\r\n                        <div className='event-inputs-row'>\r\n                            <label className='event-inputs-label input-required'>Source</label>\r\n                            <input type='text' name='source' value={newEvent.source} className='event-inputs-input' onChange={handleChange}></input>\r\n                        </div>\r\n                        <div className='event-inputs-row'>\r\n                            <div className='event-inputs-span'>\r\n                                <div className='event-inputs-column'>\r\n                                    <label className='event-inputs-label input-required'>Start Date</label>\r\n                                    <input type='date' name='startDate' value={newEvent.startDate} className='event-inputs-input' onChange={handleChange}></input>\r\n                                </div>\r\n                                <div className='event-inputs-column'>\r\n                                    <label className='event-inputs-label'>End Date</label>\r\n                                    <input type='date' name='endDate' value={newEvent.endDate} className='event-inputs-input' onChange={handleChange}></input>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='event-inputs-row'>\r\n                            <label className='event-inputs-label input-required'>Severity</label>\r\n                            <div className='event-inputs-severity-buttons'>\r\n                                <button value='Warning' className={buttonActive === 'Warning' ? 'event-inputs-button-warning' : ''} onClick={triggerButton}>Warning</button>\r\n                                <button value='Minor' className={buttonActive === 'Minor' ? 'event-inputs-button-minor' : ''} onClick={triggerButton}>Minor</button>\r\n                                <button value='Major' className={buttonActive === 'Major' ? 'event-inputs-button-major' : ''} onClick={triggerButton}>Major</button>\r\n                                <button value='Critical' className={buttonActive === 'Critical' ? 'event-inputs-button-critical' : ''} onClick={triggerButton}>Critical</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className='event-inputs-row'>\r\n                            <label className='event-inputs-label input-required'>Resolved</label>\r\n                            <div className='event-inputs-resolved-buttons'>\r\n                                <button className={newEvent.resolved ? 'resolved-button-highlighted' : ''}>True</button>\r\n                                <button className={newEvent.resolved  ? '' : 'resolved-button-highlighted'} onClick={() => setResolvedFalse()}>False</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='event-inputs'>\r\n                        <div className='event-inputs-row'>\r\n                            <label className='event-inputs-label'>Add Service</label>\r\n                            <div className='event-inputs-span'>\r\n                                <div className='event-inputs-services-container'>\r\n                                    <select name='select-services' className='event-inputs-select' onChange={selectService}>\r\n                                        {services.map((service) =>\r\n                                        (\r\n                                            <option key={service.id} value={service.id}>{service.name}</option>\r\n                                        )\r\n                                    )}\r\n                                    </select> \r\n                                    <button onClick={addService}>Add</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='event-inputs-row'>\r\n                            <label className='event-inputs-label'>Affected Services</label>\r\n                            <ul className='event-services-list'>\r\n                                {affectedServices.length > 0 && affectedServices.map((service, index) => \r\n                                (\r\n                                    <li key={service.id} className='event-service-item'>{service.name} <AiOutlineClose onClick={() => removeService(service)}/></li>\r\n                                )\r\n                                )}\r\n                            </ul>\r\n                        \r\n                        </div>\r\n                        \r\n                    </div>\r\n                   \r\n                </div>\r\n                <button className='add-event-button' onClick={() => validateAndSubmit([newEvent.desc, newEvent.severity, newEvent.source, newEvent.startDate])}>Add Event</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewEventForm","import {React, useState} from 'react';\r\nimport './EventForm.scss';\r\nimport {AiOutlineClose} from 'react-icons/ai';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nconst EditEventForm = ({eventsData, services, setEventsData, eventToDisplay, setEventToDisplay}) => {\r\n\r\n    let history = useHistory();\r\n\r\n    console.log(eventToDisplay)\r\n\r\n    let servicesToDisplay = eventToDisplay.service.reduce((currentServices, serviceID) => {\r\n        currentServices = currentServices.concat(services.find(s => s.id === serviceID));\r\n        return currentServices\r\n    } , []);\r\n\r\n    console.log(servicesToDisplay)\r\n\r\n    const [newEvent, setNewEvent] = useState(eventToDisplay);\r\n    const [serviceToAdd, setServiceToAdd] = useState(services[0]);\r\n    const [affectedServices, setAffectedServices] = useState(servicesToDisplay);\r\n    const [validated, setValidated] = useState(true);\r\n    const [buttonActive, setButtonActive] = useState(newEvent.severity);\r\n\r\n\r\n    const handleChange = (e) => {\r\n\r\n        if(e.target.name !== 'endDate'){\r\n            setNewEvent({\r\n                ...newEvent, \r\n                [e.target.name]: e.target.value\r\n            });\r\n        } else {\r\n            setNewEvent({\r\n                ...newEvent, \r\n                [e.target.name]: e.target.value,\r\n                resolved: true\r\n            });\r\n        }\r\n    }\r\n\r\n    const triggerButton = (e) => {\r\n        setButtonActive(e.target.value);\r\n        setNewEvent({\r\n            ...newEvent, \r\n            severity: e.target.value\r\n        });\r\n    }\r\n\r\n    const selectService = (e) => {\r\n       let service = services.find(s => s.id === parseInt(e.target.value)); \r\n       setServiceToAdd(service);\r\n    }\r\n\r\n    const addService = () => {\r\n\r\n        if(!affectedServices?.find(service => service.id === serviceToAdd.id)){\r\n            setAffectedServices([...affectedServices, serviceToAdd]);\r\n            setNewEvent({\r\n                ...newEvent, \r\n                service: newEvent.service? [...newEvent.service, serviceToAdd.id] : [serviceToAdd.id]\r\n            });\r\n        }\r\n    }\r\n\r\n    const removeService = (service) => {\r\n        console.log(affectedServices);\r\n\r\n        let filteredServices = affectedServices.reduce((newServices, serviceItem) => \r\n           serviceItem.id !== service.id ? [...newServices, serviceItem] : newServices, \r\n           [])\r\n        \r\n        setAffectedServices(filteredServices);\r\n        setNewEvent({\r\n            ...newEvent, \r\n            service: filteredServices.reduce((IDArray, serviceItem) =>\r\n                    [...IDArray, serviceItem.id], [])\r\n        });\r\n    }\r\n\r\n    const setResolvedFalse = () => {\r\n\r\n            setNewEvent({\r\n                ...newEvent,\r\n                resolved: false, \r\n                endDate: ''\r\n            });\r\n    }\r\n\r\n    const validateAndSubmit = (fieldsToValidate) => {\r\n        if(fieldsToValidate.find(s => s === '') === undefined){\r\n            setValidated(true);\r\n            let newEventsData = eventsData.reduce((newData, event) => \r\n            event.id === newEvent.id ? [...newData, newEvent] : [...newData, event],\r\n            []);\r\n            setEventToDisplay(newEvent);\r\n            setEventsData(newEventsData);\r\n            history.goBack();\r\n            console.log(newEventsData);\r\n         } else {\r\n            setValidated(false);\r\n         }\r\n    }\r\n\r\n    return(\r\n        <div className='page-container'>\r\n            <div className='event-form-container'>\r\n                <div className='event-form-header'>\r\n                    <p>New Event</p>\r\n                    <button onClick={() => history.goBack()}>Back</button>\r\n                </div>\r\n                <div className='event-inputs-container'>\r\n                    <div className='event-inputs-validation'>\r\n                        <p className={validated ? 'validation-message-hidden' : ''}>Please fill in all the required fields</p>\r\n                    </div>\r\n                    <div className='event-inputs'>\r\n                        <div className='event-inputs-row'>\r\n                            <label className='event-inputs-label input-required'>ID</label>\r\n                            <input disabled type='text' name='id' value={newEvent.id} className='event-inputs-input'></input>\r\n                        </div>\r\n                        <div className='event-inputs-row'>\r\n                            <label className='event-inputs-label input-required'>Name</label>\r\n                            <input type='text' name='desc' value={newEvent.desc} className='event-inputs-input' onChange={handleChange}></input>\r\n                        </div>\r\n                        <div className='event-inputs-row'>\r\n                            <label className='event-inputs-label input-required'>Source</label>\r\n                            <input type='text' name='source' value={newEvent.source} className='event-inputs-input' onChange={handleChange}></input>\r\n                        </div>\r\n                        <div className='event-inputs-row'>\r\n                            <div className='event-inputs-span'>\r\n                                <div className='event-inputs-column'>\r\n                                    <label className='event-inputs-label input-required'>Start Date</label>\r\n                                    <input type='date' name='startDate' value={newEvent.startDate} className='event-inputs-input' onChange={handleChange}></input>\r\n                                </div>\r\n                                <div className='event-inputs-column'>\r\n                                    <label className='event-inputs-label'>End Date</label>\r\n                                    <input type='date' name='endDate' value={newEvent.endDate} className='event-inputs-input' onChange={handleChange}></input>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='event-inputs-row'>\r\n                            <label className='event-inputs-label input-required'>Severity</label>\r\n                            <div className='event-inputs-severity-buttons'>\r\n                                <button value='Warning' className={buttonActive === 'Warning' ? 'event-inputs-button-warning' : ''} onClick={triggerButton}>Warning</button>\r\n                                <button value='Minor' className={buttonActive === 'Minor' ? 'event-inputs-button-minor' : ''} onClick={triggerButton}>Minor</button>\r\n                                <button value='Major' className={buttonActive === 'Major' ? 'event-inputs-button-major' : ''} onClick={triggerButton}>Major</button>\r\n                                <button value='Critical' className={buttonActive === 'Critical' ? 'event-inputs-button-critical' : ''} onClick={triggerButton}>Critical</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className='event-inputs-row'>\r\n                            <label className='event-inputs-label input-required'>Resolved</label>\r\n                            <div className='event-inputs-resolved-buttons'>\r\n                                <button className={newEvent.resolved ? 'resolved-button-highlighted' : ''}>True</button>\r\n                                <button className={newEvent.resolved  ? '' : 'resolved-button-highlighted'} onClick={() => setResolvedFalse()}>False</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='event-inputs'>\r\n                        <div className='event-inputs-row'>\r\n                            <label className='event-inputs-label'>Add Service</label>\r\n                            <div className='event-inputs-span'>\r\n                                <div className='event-inputs-services-container'>\r\n                                    <select name='select-services' className='event-inputs-select' onChange={selectService}>\r\n                                        {services.map((service) =>\r\n                                        (\r\n                                            <option key={service.id} value={service.id}>{service.name}</option>\r\n                                        )\r\n                                    )}\r\n                                    </select> \r\n                                    <button onClick={addService}>Add</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='event-inputs-row'>\r\n                            <label className='event-inputs-label'>Affected Services</label>\r\n                            <ul className='event-services-list'>\r\n                                {affectedServices.length > 0 && affectedServices.map((service, index) => \r\n                                (\r\n                                    <li key={service.id} className='event-service-item'>{service.name}<AiOutlineClose onClick={() => removeService(service)}/></li>\r\n                                )\r\n                                )}\r\n                            </ul>\r\n                        \r\n                        </div>\r\n                        \r\n                    </div>\r\n                   \r\n                </div>\r\n                <button className='add-event-button' onClick={() => validateAndSubmit([newEvent.desc, newEvent.severity, newEvent.source, newEvent.startDate])}>Apply</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditEventForm","import {React, useState} from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport './RuleForm.scss';\r\n\r\nconst EditRuleForm = ({ruleToDisplay, rulesData, setRulesData, setRuleToDisplay}) => {\r\n    \r\n    let history = useHistory();\r\n\r\n    console.log(ruleToDisplay);\r\n\r\n    const [buttonActive, setButtonActive] = useState(ruleToDisplay.severity);\r\n    const [validated, setValidated] = useState(true);\r\n    const [newRule, setNewRule] = useState(ruleToDisplay);\r\n\r\n    const handleChange = (e) => {\r\n        setNewRule({\r\n            ...newRule, \r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    const selectPriority = (e) => {\r\n        setNewRule({\r\n            ...newRule,\r\n            priority: parseInt(e.target.value)\r\n        })\r\n    }\r\n\r\n    const triggerButton = (e) => {\r\n        setButtonActive(e.target.value);\r\n        setNewRule({\r\n            ...newRule, \r\n            severity: e.target.value\r\n        });\r\n    }\r\n\r\n    const validateAndSubmit = (fieldsToValidate) => {\r\n        if(fieldsToValidate.find(s => s === '') === undefined){\r\n            setValidated(true);\r\n            let newRulesData = rulesData.reduce((newData, rule) => \r\n            rule.id === newRule.id ? [...newData, newRule] : [...newData, rule],\r\n            []);\r\n            setRuleToDisplay(newRule);\r\n            setRulesData(newRulesData);\r\n            history.goBack();\r\n         } else {\r\n            setValidated(false);\r\n         }\r\n    }\r\n\r\n    return(\r\n        <div className='rule-page-container'>\r\n            <div className='rule-form-container'>\r\n                <div className='rule-form-header'>\r\n                        <p>New Rule</p>\r\n                        <button onClick={() => history.goBack()}>Back</button>\r\n                </div>\r\n                <div className ='rule-inputs-container'>\r\n                    <div className='rule-inputs-validation'>\r\n                        <p className={validated ? 'validation-message-hidden' : ''}>Please fill in all the required fields</p>\r\n                    </div>\r\n                    <div className='rule-inputs'>\r\n                        <div className='rule-inputs-row'>\r\n                            <label className='rule-inputs-label input-required'>ID</label>\r\n                            <input disabled type='text' name='id' value={newRule.id} className='rule-inputs-input'></input>\r\n                        </div>\r\n                        <div className='rule-inputs-row'>\r\n                            <label className='rule-inputs-label input-required'>Name</label>\r\n                            <input type='text' name='name' value={newRule.name} className='rule-inputs-input' onChange={handleChange}></input>\r\n                        </div>\r\n                        <div className='rule-inputs-row direction-row'>\r\n                            <div className='rule-inputs-column column-49'>\r\n                            <label className='rule-inputs-label input-required'>Date</label>\r\n                            <input type='date' name='date' value={newRule.date} className='rule-inputs-input' onChange={handleChange}></input>\r\n                            </div>\r\n                            <div className='rule-inputs-column'>\r\n                            <label className='rule-inputs-label input-required'>Priority</label>\r\n                            <select value={newRule.priority} name='priority' className='rule-inputs-select' onChange={selectPriority}>\r\n                                <option style={{fontWeight: \"bold\"}} value={1}>1</option>\r\n                                <option style={{fontWeight: \"bold\"}} value={2}>2</option>\r\n                                <option style={{fontWeight: \"bold\"}} value={3}>3</option>\r\n                                <option style={{fontWeight: \"bold\"}} value={4}>4</option>\r\n                                <option style={{fontWeight: \"bold\"}} value={5}>5</option>\r\n                            </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='rule-inputs'>\r\n                        <div className='rule-inputs-row direction-row'>\r\n                            <div className='rule-inputs-column column-49'>\r\n                                <label className='rule-inputs-label input-required'>Attribute</label>\r\n                                <input type='text' name='attribute' value={newRule.attribute} className='rule-inputs-input' onChange={handleChange}></input>\r\n                            </div>\r\n                            <div className='rule-inputs-column column-25'>\r\n                                <label className='rule-inputs-label input-required'>Operator</label>\r\n                                <select type='text' name='operator' value={newRule.operator} className='rule-inputs-select' onChange={handleChange}>\r\n                                    <option style={{fontWeight: \"bold\"}} value={'='}>=</option>\r\n                                    <option style={{fontWeight: \"bold\"}} value={'>'}>&gt;</option>\r\n                                    <option style={{fontWeight: \"bold\"}} value={'<'}>&lt;</option>\r\n                                </select>\r\n                            </div>\r\n                            <div className='rule-inputs-column column-25'>\r\n                                <label className='rule-inputs-label input-required'>Value</label>\r\n                                <input type='text' name='value' value={newRule.value} className='rule-inputs-input' onChange={handleChange}></input>\r\n                            </div>\r\n                        </div>\r\n                        <div className='rule-inputs-row'>\r\n                            <label className='rule-inputs-label input-required'>Severity</label>\r\n                            <div className='rule-inputs-severity-buttons'>\r\n                                <button value='Warning' className={buttonActive === 'Warning' ? 'rule-inputs-button-warning' : ''} onClick={triggerButton}>Warning</button>\r\n                                <button value='Minor' className={buttonActive === 'Minor' ? 'rule-inputs-button-minor' : ''} onClick={triggerButton}>Minor</button>\r\n                                <button value='Major' className={buttonActive === 'Major' ? 'rule-inputs-button-major' : ''} onClick={triggerButton}>Major</button>\r\n                                <button value='Critical' className={buttonActive === 'Critical' ? 'rule-inputs-button-critical' : ''} onClick={triggerButton}>Critical</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <button className='add-rule-button' onClick={() => validateAndSubmit([newRule.name, newRule.date, newRule.severity, newRule.attribute, newRule.operator, newRule.value])}>Add</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditRuleForm;","import React, { useState } from 'react'\r\nimport {useHistory} from 'react-router-dom';\r\nimport './NewTaskForm.scss';\r\n\r\nconst NewTaskForm = ({event, tasksData, teamsData}) => {\r\n\r\n    const assignNewId = () => {\r\n        if(tasksData && tasksData.length > 0) {\r\n            return tasksData[tasksData.length -1].id + 1;\r\n        } else {\r\n            return 1;\r\n        }\r\n    }\r\n    \r\n    const CURRENT_DATE = new Date().toISOString().slice(0, 10);\r\n    const NEW_ID = assignNewId();\r\n\r\n    let history = useHistory();\r\n\r\n    const [validated, setValidated] = useState(true);\r\n    const [newTask, setNewTask] = useState({\r\n        id: NEW_ID,\r\n        name: '',\r\n        eventID: event.id,\r\n        startDate: CURRENT_DATE,\r\n        closed: false,\r\n        team: teamsData[0],\r\n        updates: null\r\n    })\r\n\r\n    console.log(teamsData[0]);\r\n\r\n    const handleChange = (e) => {\r\n        setNewTask({\r\n            ...newTask, \r\n            [e.target.name]: e.target.value,\r\n        });\r\n    }\r\n\r\n    const selectTeam = (e) => {\r\n        let team = teamsData.find(t => t.id === parseInt(e.target.value)); \r\n        setNewTask({\r\n            ...newTask,\r\n            team: team\r\n        })\r\n     }\r\n\r\n    const validateAndSubmit = (fieldsToValidate) => {\r\n        if(fieldsToValidate.find(s => s === '') === undefined){\r\n            setValidated(true);\r\n            tasksData.push(newTask);\r\n            history.push('/alerts');\r\n            console.log(newTask);\r\n         } else {\r\n            setValidated(false);\r\n         }\r\n    }\r\n\r\n    return(\r\n        <div className ='task-page-container'>\r\n            <div className='new-task-form-container'> \r\n                <div className='new-task-form-header'>\r\n                    <p>New Task</p>\r\n                    <button onClick={() => history.goBack()}>Back</button>\r\n                </div>\r\n                <div className='new-task-inputs-container'>\r\n                    <div className='new-task-inputs-validation'>\r\n                        <p className={validated ? 'validation-message-hidden' : ''}>Please fill in all the required fields</p>\r\n                    </div>\r\n                    <div className='new-task-inputs'>\r\n                        <div className='new-task-inputs-row'>\r\n                            <label className='new-task-inputs-label input-required'>ID</label>\r\n                            <input disabled type='text' name='id' value={NEW_ID} className='new-task-inputs-input'></input>\r\n                        </div>\r\n                        <div className='new-task-inputs-row'>\r\n                            <label className='new-task-inputs-label input-required'>Name</label>\r\n                            <input type='text' name='name' value={newTask.name} className='new-task-inputs-input' onChange={handleChange}></input>\r\n                        </div>\r\n                        <div className='new-task-inputs-row direction-row'>\r\n                            <div className='new-task-inputs-column'>\r\n                                <label className='new-task-inputs-label input-required'>Team</label>\r\n                                <select name='team' value={newTask.team.id} className={`new-task-inputs-select`} onChange={selectTeam}>\r\n                                    {teamsData.map((team, index) => {\r\n                                        return(\r\n                                            <option key={team.id} value={team.id} style={{fontWeight: \"bold\"}}>{team.name}</option>\r\n                                        )\r\n                                    })}\r\n                                </select>\r\n                            </div>\r\n                            <div className='new-task-inputs-column'>\r\n                            <label className='new-task-inputs-label input-required'>Date</label>\r\n                            <input type='date' name='startDate' value={newTask.startDate} className='new-task-inputs-input' onChange={handleChange}></input>\r\n                        </div>\r\n\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    <div className='new-task-inputs'>\r\n                        <div className='new-task-inputs-row'>\r\n                            <label className='new-task-inputs-label'>Event Details</label>\r\n                            <div className='new-task-event-container'>\r\n                            <div className='new-task-event-header'>\r\n                                <p className='new-task-event-id'>{event.id}</p>\r\n                                <p className='new-task-event-desc'>{event.desc}</p>\r\n                            </div>\r\n                            <div className='new-task-event-details'>\r\n                                <div className='new-task-event-row'>\r\n                                    <div className='new-task-event-column'>\r\n                                    <label>Severity</label>\r\n                                    <p>{event.severity}</p>\r\n                                    </div>\r\n                                    <div className='new-task-event-column'>\r\n                                    <label>Source</label>\r\n                                    <p>{event.source}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='new-task-event-row'>\r\n                                <div className='new-task-event-column'>\r\n                                    <label>Start Date</label>\r\n                                    <p>{event.startDate}</p>\r\n                                    </div>\r\n                                    <div className='new-task-event-column'>\r\n                                    <label>End Date</label>\r\n                                    <p>{event.endDate ? event.endDate : '-'}</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <button className='add-task-button' onClick={() => validateAndSubmit([newTask.name, newTask.startDate])}>Add</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewTaskForm","import React, { useState } from 'react';\r\nimport {useHistory} from 'react-router';\r\nimport './RuleForm.scss';\r\n\r\nconst NewRuleForm = ({rulesData, setRulesData}) => {\r\n\r\n    let history = useHistory();\r\n\r\n    const assignNewId = () => {\r\n        if(rulesData && rulesData.length > 0) {\r\n            return rulesData[rulesData.length - 1].id;\r\n        } else {\r\n            return 1;\r\n        }\r\n    }\r\n\r\n    const NEW_ID = assignNewId();\r\n    const CURRENT_DATE = new Date().toISOString().slice(0, 10);\r\n\r\n    const [buttonActive, setButtonActive] = useState(null);\r\n    const [validated, setValidated] = useState(true);\r\n    const [newRule, setNewRule] = useState({\r\n        id: NEW_ID,\r\n        name: '',\r\n        severity: '',\r\n        priority: 1,\r\n        attribute: '',\r\n        operator: '=',\r\n        value: ``,\r\n        date: CURRENT_DATE\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        setNewRule({\r\n            ...newRule, \r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    const selectPriority = (e) => {\r\n        setNewRule({\r\n            ...newRule,\r\n            priority: parseInt(e.target.value)\r\n        })\r\n    }\r\n\r\n    const triggerButton = (e) => {\r\n        setButtonActive(e.target.value);\r\n        setNewRule({\r\n            ...newRule, \r\n            severity: e.target.value\r\n        });\r\n    }\r\n\r\n    const validateAndSubmit = (fieldsToValidate) => {\r\n        if(fieldsToValidate.find(s => s === '') === undefined){\r\n            setValidated(true);\r\n            setRulesData(rulesData.concat(newRule));\r\n            history.goBack();\r\n         } else {\r\n            setValidated(false);\r\n         }\r\n    }\r\n\r\n    return(\r\n        <div className='rule-page-container'>\r\n            <div className='rule-form-container'>\r\n                <div className='rule-form-header'>\r\n                        <p>New Rule</p>\r\n                        <button onClick={() => history.goBack()}>Back</button>\r\n                </div>\r\n                <div className ='rule-inputs-container'>\r\n                    <div className='rule-inputs-validation'>\r\n                        <p className={validated ? 'validation-message-hidden' : ''}>Please fill in all the required fields</p>\r\n                    </div>\r\n                    <div className='rule-inputs'>\r\n                        <div className='rule-inputs-row'>\r\n                            <label className='rule-inputs-label input-required'>ID</label>\r\n                            <input disabled type='text' name='id' value={NEW_ID} className='rule-inputs-input'></input>\r\n                        </div>\r\n                        <div className='rule-inputs-row'>\r\n                            <label className='rule-inputs-label input-required'>Name</label>\r\n                            <input type='text' name='name' value={newRule.name} className='rule-inputs-input' onChange={handleChange}></input>\r\n                        </div>\r\n                        <div className='rule-inputs-row direction-row'>\r\n                            <div className='rule-inputs-column column-49'>\r\n                            <label className='rule-inputs-label input-required'>Date</label>\r\n                            <input type='date' name='date' value={newRule.date} className='rule-inputs-input' onChange={handleChange}></input>\r\n                            </div>\r\n                            <div className='rule-inputs-column'>\r\n                            <label className='rule-inputs-label input-required'>Priority</label>\r\n                            <select name='priority' className='rule-inputs-select' onChange={selectPriority}>\r\n                                <option style={{fontWeight: \"bold\"}} value={1}>1</option>\r\n                                <option style={{fontWeight: \"bold\"}} value={2}>2</option>\r\n                                <option style={{fontWeight: \"bold\"}} value={3}>3</option>\r\n                                <option style={{fontWeight: \"bold\"}} value={4}>4</option>\r\n                                <option style={{fontWeight: \"bold\"}} value={5}>5</option>\r\n                            </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='rule-inputs'>\r\n                        <div className='rule-inputs-row direction-row'>\r\n                            <div className='rule-inputs-column column-49'>\r\n                                <label className='rule-inputs-label input-required'>Attribute</label>\r\n                                <input type='text' name='attribute' value={newRule.attribute} className='rule-inputs-input' onChange={handleChange}></input>\r\n                            </div>\r\n                            <div className='rule-inputs-column column-25'>\r\n                                <label className='rule-inputs-label input-required'>Operator</label>\r\n                                <select type='text' name='operator' value={newRule.operator} className='rule-inputs-select' onChange={handleChange}>\r\n                                    <option style={{fontWeight: \"bold\"}} value={'='}>=</option>\r\n                                    <option style={{fontWeight: \"bold\"}} value={'>'}>&gt;</option>\r\n                                    <option style={{fontWeight: \"bold\"}} value={'<'}>&lt;</option>\r\n                                </select>\r\n                            </div>\r\n                            <div className='rule-inputs-column column-25'>\r\n                                <label className='rule-inputs-label input-required'>Value</label>\r\n                                <input type='text' name='value' value={newRule.value} className='rule-inputs-input' onChange={handleChange}></input>\r\n                            </div>\r\n                        </div>\r\n                        <div className='rule-inputs-row'>\r\n                            <label className='rule-inputs-label input-required'>Severity</label>\r\n                            <div className='rule-inputs-severity-buttons'>\r\n                                <button value='Warning' className={buttonActive === 'Warning' ? 'rule-inputs-button-warning' : ''} onClick={triggerButton}>Warning</button>\r\n                                <button value='Minor' className={buttonActive === 'Minor' ? 'rule-inputs-button-minor' : ''} onClick={triggerButton}>Minor</button>\r\n                                <button value='Major' className={buttonActive === 'Major' ? 'rule-inputs-button-major' : ''} onClick={triggerButton}>Major</button>\r\n                                <button value='Critical' className={buttonActive === 'Critical' ? 'rule-inputs-button-critical' : ''} onClick={triggerButton}>Critical</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <button className='add-rule-button' onClick={() => validateAndSubmit([newRule.name, newRule.date, newRule.severity, newRule.attribute, newRule.operator, newRule.value])}>Add</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewRuleForm;\r\n\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport './TaskUpdateForm.scss';\r\n\r\nconst TaskUpdateForm = ({tasksData, taskToDisplay, eventsData}) => {\r\n\r\n\r\n    const assignNewId = () => {\r\n        let newId = 1;\r\n        if(taskToDisplay?.updates && taskToDisplay.updates.length > 0) {\r\n            newId = taskToDisplay.updates[taskToDisplay.updates.length -1].id + 1;\r\n        } \r\n        return newId;\r\n  \r\n    }\r\n\r\n    const NEW_ID = assignNewId();\r\n    const CURRENT_DATE = new Date().toISOString().slice(0, 10);\r\n\r\n    let history = useHistory();\r\n\r\n    const [taskClosed, setTaskClosed] = useState(false);\r\n    const [validated, setValidated] = useState(true);\r\n    const [newUpdate, setNewUpdate] = useState({\r\n        id: NEW_ID,\r\n        date: CURRENT_DATE,\r\n        desc: '',\r\n        status: 400\r\n    })\r\n\r\n    \r\n\r\n    const handleChange = (e) => {\r\n        setNewUpdate({\r\n            ...newUpdate, \r\n            [e.target.name]: e.target.value,\r\n        });\r\n    }\r\n\r\n    const validateAndSubmit = (fieldsToValidate) => {\r\n        if(fieldsToValidate.find(s => s === '') === undefined){\r\n            setValidated(true);\r\n            if(taskToDisplay.updates && taskToDisplay.updates.length > 0){\r\n                tasksData.find(task => task.id === taskToDisplay.id).updates.push(newUpdate);\r\n            } else {\r\n                tasksData.find(task => task.id === taskToDisplay.id).updates = [newUpdate];\r\n            }\r\n        tasksData.find(task => task.id === taskToDisplay.id).closed = taskClosed;\r\n        if(newUpdate.status === 200){\r\n            let updatedEvent = eventsData.find(event => event.id === taskToDisplay.eventID);\r\n            updatedEvent.resolved = true;\r\n            updatedEvent.endDate = newUpdate.date;\r\n        }\r\n        history.goBack();\r\n        } else {\r\n            setValidated(false);\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className='task-update-page-container'>\r\n            <div className='new-update-form-container'>\r\n                <div className='new-update-form-header'>\r\n                        <p>New Update</p>\r\n                        <button onClick={() => history.goBack()}>Back</button>\r\n                </div>\r\n                <div className ='new-update-inputs-container'>\r\n                    <div className='new-update-inputs-validation'>\r\n                        <p className={validated ? 'validation-message-hidden' : ''}>Please fill in all the required fields</p>\r\n                    </div>\r\n                    <div className='new-update-inputs'>\r\n                        <div className='new-update-inputs-row'>\r\n                            <label className='new-update-inputs-label input-required'>ID</label>\r\n                            <input disabled type='text' name='id' value={NEW_ID} className='new-update-inputs-input'></input>\r\n                        </div>\r\n                        <div className='new-update-inputs-row'>\r\n                            <label className='new-update-inputs-label input-required'>Description</label>\r\n                            <input type='text' name='desc' value={newUpdate.desc} className='new-update-inputs-input' onChange={handleChange}></input>\r\n                        </div>\r\n                        <div className='new-update-inputs-row direction-row'>\r\n                            <div className='new-update-inputs-column'>\r\n                                <label className='new-update-inputs-label input-required'>Date</label>\r\n                                <input type='date' name='date' value={newUpdate.date} className='new-update-inputs-input' onChange={handleChange}></input>\r\n                            </div>\r\n                            <div className='new-update-inputs-column'>\r\n                                <label className='new-update-inputs-label input-required'>Status</label>\r\n                                <select name='status' value={newUpdate.status} className={`new-update-inputs-select`} onChange={(e) => setNewUpdate({...newUpdate, [e.target.name]: parseInt(e.target.value)})}>\r\n                                    <option value={400}>Active</option>\r\n                                    <option value={200}>Resolved</option>\r\n                                    <option value={100}>Applying Changes</option>\r\n                                </select>\r\n                            </div>       \r\n                        </div>\r\n                        <div className='new-update-inputs-row'>\r\n                                <label className='new-update-inputs-label input-required'>Close task</label>\r\n                                <div className='new-update-inputs-closed-buttons'>\r\n                                    <div className='new-update-inputs-column'>\r\n                                        <button className={taskClosed ? 'task-closed-button' : 'task-closed-button task-closed-button-highlighted'} onClick={() => setTaskClosed(false)}>False</button>\r\n                                    </div>\r\n                                    <div className='new-update-inputs-column'>\r\n                                        <button className={taskClosed ? 'task-closed-button task-closed-button-highlighted' : 'task-closed-button'} onClick={() => setTaskClosed(true)}>True</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                    </div>\r\n                </div>\r\n                <button className='add-update-button' onClick={() => validateAndSubmit([newUpdate.desc])}>Add</button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskUpdateForm;","\r\nexport const EventsData = [\r\n    {\r\n        id: 1,\r\n        severity: 'Warning',\r\n        source: 'SolarWinds',\r\n        service: [1, 3, 5],\r\n        desc: 'Storage Capacity over 70%',\r\n        startDate: '2020-05-06',\r\n        endDate: null,\r\n        resolved: false\r\n    },\r\n    {\r\n        id: 2,\r\n        severity: 'Major',\r\n        source: 'SolarWinds',\r\n        service: [3, 4, 5],\r\n        desc: 'Memory Issue',\r\n        startDate: '2020-05-03',\r\n        endDate: '2020-06-23',\r\n        resolved: true\r\n    },\r\n    {\r\n        id: 3,\r\n        severity: 'Minor',\r\n        source: 'Nagios',\r\n        service: [1],\r\n        desc: 'CPU percentage over 80%',\r\n        startDate: '2020-06-02',\r\n        endDate: '2020-06-23',\r\n        resolved: true\r\n    },\r\n    {\r\n        id: 4,\r\n        severity: 'Warning',\r\n        source: 'Group Alert',\r\n        service: null,\r\n        desc: 'NIC card is not running',\r\n        startDate: '2020-03-11',\r\n        endDate: null,\r\n        resolved: false\r\n    },\r\n    {\r\n        id: 5,\r\n        severity: 'Critical',\r\n        source: 'Nagios',\r\n        service: [4, 6],\r\n        desc: `Couldn't establish connection`,\r\n        startDate: '2020-04-27',\r\n        endDate: '2020-05-07',\r\n        resolved: true\r\n    },\r\n    {\r\n        id: 6,\r\n        severity: 'Warning',\r\n        source: 'Group Alert',\r\n        service: [6],\r\n        desc: 'Virtual Machine is not running',\r\n        startDate: '2020-07-05',\r\n        endDate: null,\r\n        resolved: false\r\n    },\r\n    {\r\n        id: 7,\r\n        severity: 'Warning',\r\n        source: 'Group Alert',\r\n        service: [4,8],\r\n        desc: 'Latency over 150ms',\r\n        startDate: '2020-05-06',\r\n        endDate: null,\r\n        resolved: false\r\n    },\r\n    {\r\n        id: 8,\r\n        severity: 'Critical',\r\n        source: 'Nagios',\r\n        service: [6],\r\n        desc: 'Proxy server has stopped working',\r\n        startDate: '2020-07-07',\r\n        endDate: null,\r\n        resolved: false\r\n    },\r\n    {\r\n        id: 9,\r\n        severity: 'Minor',\r\n        source: 'SCOM',\r\n        service: [7, 5],\r\n        desc: 'Port 03 is not responding ',\r\n        startDate: '2020-07-04',\r\n        endDate: null,\r\n        resolved: false\r\n    },\r\n    {\r\n        id: 10,\r\n        severity: 'Major',\r\n        source: 'SCOM',\r\n        service: [8],\r\n        desc: 'Unauthorized activity',\r\n        startDate: '2020-08-01',\r\n        endDate: '2020-08-15',\r\n        resolved: true\r\n    },\r\n    {\r\n        id: 11,\r\n        severity: 'Warning',\r\n        source: 'SCOM',\r\n        service: [5],\r\n        desc: 'Driver is out of date',\r\n        startDate: '2020-09-11',\r\n        endDate: '',\r\n        resolved: false\r\n    },\r\n    {\r\n        id: 12,\r\n        severity: 'Minor',\r\n        source: 'Group Alert',\r\n        service: [6],\r\n        desc: 'User application is not responding',\r\n        startDate: '2020-09-11',\r\n        endDate: null,\r\n        resolved: false\r\n    },\r\n];\r\n","\r\n\r\nexport const RulesData = [\r\n    {\r\n        id: 1,\r\n        name: 'CPU percentage over 80%',\r\n        severity: 'Warning',\r\n        priority: 2,\r\n        attribute: 'CPU',\r\n        operator: '>',\r\n        value: '80%',\r\n        date: '2020-03-13'\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'Router disconnected',\r\n        severity: 'Major',\r\n        priority: 4,\r\n        attribute: 'Router #05423',\r\n        operator: '=',\r\n        value: 'disconnected',\r\n        date: '2020-02-19'\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'Application not accesible',\r\n        severity: 'Major',\r\n        priority: 5,\r\n        attribute: 'Application service',\r\n        operator: '=',\r\n        value: `couldn't establish connection`,\r\n        date: '2020-06-21'\r\n    },\r\n    {\r\n        id: 4,\r\n        name: 'Database capacity over 70%',\r\n        severity: 'Warning',\r\n        priority: 1,\r\n        attribute: 'Database',\r\n        operator: '>',\r\n        value: '70%',\r\n        date: '2020-02-04'\r\n    },\r\n    {\r\n        id: 5,\r\n        name: 'Latency over 150ms',\r\n        severity: 'Warning',\r\n        priority: 1,\r\n        attribute: 'Latency',\r\n        operator: '>',\r\n        value: '150',\r\n        date: '2020-02-07'\r\n    },\r\n    {\r\n        id: 6,\r\n        name: 'Proxy server not working',\r\n        severity: 'Critical',\r\n        priority: 5,\r\n        attribute: 'Proxy connection',\r\n        operator: '=',\r\n        value: 'disconnected',\r\n        date: '2020-03-01'\r\n    },\r\n    {\r\n        id: 7,\r\n        name: `Couldn't access data`,\r\n        severity: 'Major',\r\n        priority: 4,\r\n        attribute: 'Database',\r\n        operator: '=',\r\n        value: 'no access',\r\n        date: '2020-07-06'\r\n    },\r\n    {\r\n        id: 8,\r\n        name: 'Port is not responding',\r\n        severity: 'Minor',\r\n        priority: 2,\r\n        attribute: 'Port 01',\r\n        operator: '=',\r\n        value: 'disconnected',\r\n        date: '2020-05-17'\r\n    },\r\n    {\r\n        id: 9,\r\n        name: 'Port is not responding',\r\n        severity: 'Minor',\r\n        priority: 2,\r\n        attribute: 'Port 02',\r\n        operator: '=',\r\n        value: 'disconnected',\r\n        date: '2020-05-17'\r\n    },\r\n    {\r\n        id: 10,\r\n        name: 'Port is not responding',\r\n        severity: 'Minor',\r\n        priority: 2,\r\n        attribute: 'Port 03',\r\n        operator: '=',\r\n        value: 'disconnected',\r\n        date: '2020-04-17'\r\n    },\r\n    {\r\n        id: 11,\r\n        name: 'Tomcat server is down',\r\n        severity: 'Major',\r\n        priority: 3,\r\n        attribute: 'Tomcat server',\r\n        operator: '=',\r\n        value: 'disconnected',\r\n        date: '2020-04-11'\r\n    },\r\n    {\r\n        id: 12,\r\n        name: 'Tibco service is down',\r\n        severity: 'Major',\r\n        priority: 3,\r\n        attribute: 'Tibco service',\r\n        operator: '=',\r\n        value: 'disconnected',\r\n        date: '2020-04-12'\r\n    },\r\n    {\r\n        id: 13,\r\n        name: 'Alteon service is down',\r\n        severity: 'Major',\r\n        priority: 3,\r\n        attribute: 'Alteon service',\r\n        operator: '=',\r\n        value: 'disconnected',\r\n        date: '2020-04-15'\r\n    },\r\n    {\r\n        id: 14,\r\n        name: 'Server response time over 3000ms',\r\n        severity: 'Minor',\r\n        priority: 2,\r\n        attribute: 'Server response time',\r\n        operator: '>',\r\n        value: '3000ms',\r\n        date: '2020-04-13'\r\n    },\r\n    {\r\n        id: 15,\r\n        name: 'Server router is down',\r\n        severity: 'Major',\r\n        priority: 4,\r\n        attribute: 'Router 33H65JW7',\r\n        operator: '=',\r\n        value: 'disconnected',\r\n        date: '2020-05-07'\r\n    },\r\n    {\r\n        id: 16,\r\n        name: 'Keylogger detected',\r\n        severity: 'Major',\r\n        priority: 4,\r\n        attribute: 'Malicious software',\r\n        operator: '=',\r\n        value: 'detected',\r\n        date: '2020-05-07'\r\n    }\r\n]","\r\n\r\nexport const TasksData = [\r\n    {\r\n        id: 1,\r\n        name: 'CPU usage threshold exceeded',\r\n        eventID: 3,\r\n        startDate: '2020-06-15',\r\n        closed: true,\r\n        team: {\r\n            id: 1,\r\n            name: 'Service engineering'\r\n        },\r\n        updates: [\r\n            {\r\n                id: 1,\r\n                date: '2020-06-18',\r\n                desc: 'Disabling negligible processes affecting the CPU',\r\n                status: 400\r\n            },\r\n            {\r\n                id: 2,\r\n                date: '2020-06-19',\r\n                desc: 'Defragmented the hard drives',\r\n                status: 400\r\n            },\r\n            {\r\n                id: 3,\r\n                date: '2020-06-21',\r\n                desc: 'Closing the event as CPU usage has been lowered significantly',\r\n                status: 200\r\n            }\r\n        ]\r\n\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'Connection issue',\r\n        eventID: 5,\r\n        startDate: '2020-04-28',\r\n        closed: true,\r\n        team: {\r\n            id: 2,\r\n            name: 'Network maintenance'\r\n        },\r\n        updates: [\r\n            {\r\n                id: 4,\r\n                date: '2020-04-29',\r\n                desc: 'Redirecting to the emergency connection. Checking for malicious software',\r\n                status: 400\r\n            },\r\n            {\r\n                id: 5,\r\n                date: '2020-04-29',\r\n                desc: 'Resetting network settings',\r\n                status: 400\r\n            },\r\n            {\r\n                id: 6,\r\n                date: '2020-05-30',\r\n                desc: 'Checking for possible hardware malfunctions',\r\n                status: 400\r\n            },\r\n            {\r\n                id: 7,\r\n                date: '2020-05-06',\r\n                desc: 'Setting up a new routing device. Establishing new connection',\r\n                status: 400\r\n            },\r\n            {\r\n                id: 8,\r\n                date: '2020-05-07',\r\n                desc: 'Closing the event',\r\n                status: 200\r\n            },\r\n            {\r\n                id: 9,\r\n                date: '2020-05-11',\r\n                desc: 'Creating a new rule for the monitoring system. Closing the task',\r\n                status: 100\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'Update drivers',\r\n        eventID: 11,\r\n        startDate: '2020-09-12',\r\n        closed: false,\r\n        team: {\r\n            id: 3,\r\n            name: 'Software engineering'\r\n        },\r\n        updates: [\r\n            {\r\n                id: 10,\r\n                date: '2020-09-13',\r\n                desc: 'Checking new drivers compatibility',\r\n                status: 400\r\n            },\r\n            {\r\n                id: 11,\r\n                date: '2020-09-16',\r\n                desc: 'Updating necessery drivers',\r\n                status: 400\r\n            }\r\n        ]\r\n\r\n    },\r\n    {\r\n        id: 4,\r\n        name: 'Memory reaching its maximum capacity',\r\n        eventID: 2,\r\n        startDate: '2020-05-03',\r\n        closed: true,\r\n        team: {\r\n            id: 1,\r\n            name: 'Service engineering'\r\n        },\r\n        updates: [\r\n            {\r\n                id: 12,\r\n                date: '2020-05-16',\r\n                desc: 'Creating the backup for existing data',\r\n                status: 400\r\n            },\r\n            {\r\n                id: 13,\r\n                date: '2020-06-03',\r\n                desc: 'Freeing up space by shrinking the Database and log files',\r\n                status: 400\r\n            },\r\n            {\r\n                id: 14,\r\n                date: '2020-06-21',\r\n                desc: 'Rebuilding the indexes',\r\n                status: 400\r\n            },\r\n            {\r\n                id: 15,\r\n                date: '2020-06-23',\r\n                desc: 'Issue has been resolved. Closing the event',\r\n                status: 200\r\n            }\r\n        ]\r\n\r\n    },\r\n    {\r\n        id: 5,\r\n        name: 'Possible unauthorized access to data',\r\n        eventID: 10,\r\n        startDate: '2020-08-01',\r\n        closed: true,\r\n        team: {\r\n            id: 1,\r\n            name: 'Service engineering'\r\n        },\r\n        updates: [\r\n            {\r\n                id: 16,\r\n                date: '2020-08-01',\r\n                desc: 'Checking for malicious software',\r\n                status: 400\r\n            },\r\n            {\r\n                id: 17,\r\n                date: '2020-08-03',\r\n                desc: 'Keylogger found and removed. Applying quarantine',\r\n                status: 400\r\n            },\r\n            {\r\n                id: 18,\r\n                date: '2020-08-11',\r\n                desc: 'Creating new encryption keys, refactoring authorization rules',\r\n                status: 400\r\n            },\r\n            {\r\n                id: 19,\r\n                date: '2020-08-15',\r\n                desc: 'Closing the event',\r\n                status: 200\r\n            },\r\n            {\r\n                id: 20,\r\n                date: '2020-06-23',\r\n                desc: 'Creating a new rule for malicious software detection. Closing the task',\r\n                status: 100\r\n            }\r\n        ]\r\n\r\n    },\r\n    {\r\n        id: 6,\r\n        name: 'Proxy server not running',\r\n        eventID: 8,\r\n        startDate: '2020-07-11',\r\n        closed: false,\r\n        team: {\r\n            id: 2,\r\n            name: 'Network maintenance'\r\n        },\r\n        updates: [{\r\n            id: 21,\r\n            date: '2020-07-14',\r\n            desc: 'Resetting network settings',\r\n            status: 400\r\n        }]\r\n    },\r\n    {\r\n        id: 7,\r\n        name: 'Virtual Machine not running',\r\n        eventID: 22,\r\n        startDate: '2020-07-09',\r\n        closed: false,\r\n        team: {\r\n            id: 3,\r\n            name: 'Software engineering'\r\n        },\r\n        updates: null\r\n    },\r\n    {\r\n        id: 8,\r\n        name: 'Databse capacity threshold exceeded',\r\n        eventID: 23,\r\n        startDate: '2020-05-10',\r\n        closed: false,\r\n        team: {\r\n            id: 1,\r\n            name: 'Service engineering'\r\n        },\r\n        updates: null\r\n    }\r\n]","export const TeamsData = [\r\n    {\r\n        id: 1,\r\n        name: 'Service engineering'\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'Network maintenance'\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'Software engineering'\r\n    }\r\n]","import React, { useState, useMemo } from \"react\";\r\nimport \"./App.scss\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Status from \"./Routes/Status\";\r\nimport Alerts from \"./Routes/Alerts\";\r\nimport Rules from \"./Routes/Rules\";\r\nimport Tasks from \"./Routes/Tasks\";\r\nimport EventDetails from \"./Routes/EventDetails\";\r\nimport RuleDetails from \"./Routes/RuleDetails\";\r\nimport NewEventForm from \"./Routes/NewEventForm\";\r\nimport EditEventForm from \"./Routes/EditEventForm\";\r\nimport EditRuleForm from \"./Routes/EditRuleForm\";\r\nimport NewTaskForm from \"./Routes/NewTaskForm\";\r\nimport NewRuleForm from \"./Routes/NewRuleForm\";\r\nimport TaskUpdateForm from \"./Routes/TaskUpdateForm\";\r\nimport { EventsData } from \"./components/EventsData\";\r\nimport { RulesData } from \"./components/RulesData\";\r\nimport { ServicesData } from \"./components/ServicesData\";\r\nimport { TasksData as tasksData } from './components/TasksData';\r\nimport { TeamsData as teamsData} from './components/TeamsData';\r\n\r\nconst SEVERITIES_STATUSES = {\r\n  None: 1,\r\n  Warning: 2,\r\n  Minor: 3,\r\n  Major: 4,\r\n  Critical: 5,\r\n};\r\n\r\nconst App = () => {\r\n  const [eventsData, setEventsData] = useState(EventsData);\r\n  const [rulesData, setRulesData] = useState(RulesData);\r\n  const [eventToDisplay, setEventToDisplay] = useState(eventsData[0]);\r\n  const [ruleToDisplay, setRuleToDisplay] = useState(RulesData[0]);\r\n  const [taskToDisplay, setTaskToDisplay] = useState(tasksData[0]);\r\n\r\n  const services = useMemo(() => {\r\n    let data = ServicesData.map((service) => ({\r\n      ...service,\r\n      events: eventsData.reduce((serviceEvents, event) => {\r\n        if (!event.service) {\r\n          return serviceEvents;\r\n        }\r\n        const newEvents = event.service.reduce(\r\n          (events, eventServiceId) =>\r\n            eventServiceId === service.id ? [...events, event] : events,\r\n          []\r\n        );\r\n        return [...serviceEvents, ...newEvents];\r\n      }, []),\r\n      status: 1,\r\n    }));\r\n  \r\n    data = data.map((service) => {\r\n      if (!service.events || service.events.length === 0) {\r\n        return service;\r\n      }\r\n      const highestSeverity = service.events.reduce((current, { severity }) => \r\n        SEVERITIES_STATUSES[severity] > SEVERITIES_STATUSES[current]\r\n          ? severity\r\n          : current\r\n      , \"None\");\r\n\r\n      return { ...service, status: SEVERITIES_STATUSES[highestSeverity] };\r\n    });\r\n\r\n    return data\r\n    // ServicesData tutaj jak bedzie to dynamiczne\r\n  }, [eventsData]);\r\n\r\n\r\n\r\n  const itemCallback = (itemType, item) => {\r\n    if (itemType === \"event\") {\r\n      setEventToDisplay(item);\r\n    } else if (itemType === \"rule\") {\r\n      setRuleToDisplay(item);\r\n    } else if (itemType === \"task\") {\r\n      setTaskToDisplay(item);\r\n    console.log(ruleToDisplay);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n      <Navbar />\r\n        <Switch>\r\n          <Route path=\"/itil-events\" exact>\r\n            <Status\r\n              services={services}\r\n              itemCallback={itemCallback}\r\n              eventsData={eventsData}\r\n              tasksData={tasksData}\r\n            />\r\n          </Route>\r\n          <Route path=\"/alerts\" exact>\r\n            <Alerts eventsData={eventsData} itemCallback={itemCallback} />\r\n          </Route>\r\n          <Route path=\"/alerts/:eventID/new-task\" exact>\r\n            <NewTaskForm event={eventToDisplay} tasksData={tasksData} teamsData={teamsData}/>\r\n          </Route>\r\n          <Route path=\"/alerts/new-event\">\r\n            <NewEventForm eventsData={eventsData} services={services} setEventsData={setEventsData} />\r\n          </Route>\r\n          <Route path=\"/alerts/:eventID/edit-event\">\r\n            <EditEventForm eventsData={eventsData} services={services} setEventsData={setEventsData} eventToDisplay={eventToDisplay} setEventToDisplay={setEventToDisplay}/>\r\n          </Route>\r\n          <Route path=\"/alerts/:eventID\">\r\n            <EventDetails eventToDisplay={eventToDisplay}/>\r\n          </Route>\r\n          <Route path=\"/rules\" exact>\r\n            <Rules rulesData={rulesData} itemCallback={itemCallback} />\r\n          </Route>\r\n          <Route path=\"/rules/new-rule\" exact>\r\n            <NewRuleForm rulesData={rulesData} setRulesData={setRulesData}/>\r\n          </Route>\r\n          <Route path=\"/rules/:ruleID/edit-rule\" exact>\r\n            <EditRuleForm ruleToDisplay={ruleToDisplay} rulesData={rulesData} setRulesData={setRulesData} setRuleToDisplay={setRuleToDisplay}/>\r\n          </Route>\r\n          <Route path=\"/rules/:ruleID\">\r\n            <RuleDetails ruleToDisplay={ruleToDisplay} />\r\n          </Route>\r\n          <Route path=\"/tasks\" exact>\r\n            <Tasks tasksData={tasksData} setTaskToDisplay={setTaskToDisplay} setEventToDisplay={setEventToDisplay} teamsData={teamsData} eventsData={eventsData}/>\r\n          </Route>\r\n          <Route path=\"/tasks/:taskID/new-update\">\r\n            <TaskUpdateForm tasksData={tasksData} taskToDisplay={taskToDisplay} eventsData={eventsData} />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App.jsx';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}